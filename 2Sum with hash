#include <map>
#include <vector>
#include <iostream>

using namespace std;

/*
* Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
* You may assume that each input would have exactly one solution, and you may not use the same element twice.
* You can return the answer in any order.
/*
class TwoSum {
public:
    static vector<int> twoSum(vector<int>& nums, int target) {
        map<int,int> m;
        vector<int> result;
        for(int i = 0; i < nums.size(); i++) {
            int temp = target - nums[i];
            if (m.count(temp)) {
                result.push_back(i);
                result.push_back(m[temp]);
                return result;
            }
            m[nums[i]] = i;
        }
        return result;
    }
};

int main() {
    vector<int> nums = {1,2,3,4,5};
    vector<int> result = TwoSum::twoSum(nums, 3);
    if (!result.empty())
        cout << "indexes: " << result[0] << ", " << result[1] << endl;
    else
        cout << "no result";

    return 0;
}

