# You are given an integer array height of length n.
# There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
# Find two lines that together with the x-axis form a container, such that the container contains the most water.
# Return the maximum amount of water a container can store.
class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        
        left = 0
        right = len(height) - 1
        Max = 0
        
        while(right != left):
            current = min(height[right], height[left]) * (right - left)
            if current > Max:
                Max = current
            
            if(height[right] >= height[left]):
                left += 1
                
            else:
                right -= 1
        
        return Max
        
