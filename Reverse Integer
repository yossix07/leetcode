#include <iostream>
#include <cmath>

using namespace std;

/*
 * Given a signed 32-bit integer x, return x with its digits reversed.
 * If reversing x causes the value to go outside the signed 32-bit integer range [-2^31, 2^31 - 1], then return 0.
 */
class Solution {
public:
    int reverse(int x) {
        int copy = x;
        int length = 0;

        while(copy) {
            copy /= 10;
            length++;
        }

        int rev = 0;
        length--;

        while(x) {
            if(rev + (x%10) * pow(10,length) > INT_MAX || rev + (x%10) * pow(10,length) < INT_MIN)
                return 0;
            rev += (x%10) * pow(10,length);
            x /= 10;
            length--;
        }
        return rev;
    }
};

int main() {
    Solution s = Solution();
    cout << s.reverse(123) << endl;
    cout << s.reverse(-987654) << endl;
    cout << s.reverse(2147483645) << endl;
    return 0;
}
